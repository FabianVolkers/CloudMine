input {
    beats {
        port => "5044"
    }
}
# The filter part of this file is commented out to indicate that it is
# optional.
filter {
    if [container][image][name] == "nginx:latest" {
        if [stream] == "stdout" {
            grok {
                patterns_dir => "/usr/share/logstash/config/patterns"
                match => { "message" => "%{NGINX_ACCESS}" }
                #remove_tag => ["nginx_access", "_grokparsefailure"]
                add_field => {
                    "type" => "nginx_access"
                }
            }
        } else if [stream] == "stderr" {
            grok {
                patterns_dir => "/usr/share/logstash/config/patterns"
                match => { "message" => "%{NGINX_ERROR}" }
                #remove_tag => ["nginx_access", "_grokparsefailure"]
                add_field => {
                    "type" => "nginx_error"
                }
            }
        }
    #date {
    #  match => ["time_local", "dd/MMM/YYYY:HH:mm:ss Z"]
    #  target => "@timestamp"
    #  remove_field => "time_local"
    #}

    #useragent {
    #  source => "user_agent"
    #  target => "useragent"
    #  remove_field => "user_agent"
    #}
        geoip {
            source => "client_ip"
        }
    } else if [event][module] == "iptables" {
        #grok {
            #        patterns_dir => "/usr/share/logstash/config/patterns"
            #        match => { "message" => "%{UFW_BLOCK}" }
            #        #remove_tag => ["nginx_access", "_grokparsefailure"]
            #        add_field => {
            #            "type" => "ufw_block"
            #        }
            #    }
        geoip {
                source => "source_ip"
        }
    } else {
        mutate {
            add_tag => ["no_pipeline"]
        }
    }
}
output {
    #stdout { codec => rubydebug }
    elasticsearch {
        hosts => [ "https://elasticsearch.fabianvolkers.com:443" ]
    }
}